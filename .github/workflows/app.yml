name: Gettem Deployment

env:
  STRAPI_URL: '${{ secrets.STRAPI_URL }}'
  STRAPI_AUTH_TOKEN: 'placeholder'

# This workflow triggers whenever there's a push to the 'prod' branch. 
on:
    push:
        branches: [ prod ]
        paths: 
        - 'frontend/**' 

jobs:
  job_id:
    environment:
      name: production
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
    - uses: 'actions/checkout@v4'
    - name: print oidc token claims
      run: |
          IDTOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json"  | jq -r '.value')
          jwtd() {
            if [[ -x $(command -v jq) ]]; then
                jq -R 'split(".") | .[1] | @base64d | fromjson' <<< "${1}" > jwt_claims.json
                cat jwt_claims.json
                echo ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL}} 
            fi
          }
          jwtd $IDTOKEN


    - id: docker-login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
    - id: docker-build-push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./frontend/Dockerfile.prod
        push: true
        tags: otacon900/gettem:latest

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/527783132744/locations/global/workloadIdentityPools/gettem-github/providers/github'
        service_account: 'gettem-github-actions@portfolio-website-414517.iam.gserviceaccount.com'

    

    - id: 'start-gettem'
      uses: 'google-github-actions/ssh-compute@v1'
      with:
        instance_name: 'instance-20240216-171943'
        zone: 'us-central1-a'
        user: 'github'
        ssh_private_key: '${{ secrets.GCP_SSH }}'
        script: '${{ github.workspace }}/strapi.sh'
          

    - id: 'output'
      if: always()
      run: |-
        echo '${{ steps.start-gettem.outputs.stdout }}'
        echo '${{ steps.start-gettem.outputs.stderr }}'

        